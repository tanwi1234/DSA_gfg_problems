 int prec(char c) {
    if(c == '^')
        return 3;
    else if(c == '/')
        return 2;
    else if(c=='*')
         return 1;
    else if(c == '+' || c == '-')
        return -1;
    else
        return -2;
}

    string infixToPostfix(string s)
    {
        // Your code here
        stack<int>st;
        string result;
        int i;
        for(i=0;i<s.length();i++)
        {
            if(s[i]>='a' && s[i]<='z'||s[i]>='A' && s[i]<='Z'|| s[i]>='0' && s[i]<='9')
            {
                result.push_back(s[i]);
            }
            
            else if(s[i]=='(')
            {
                st.push(s[i]);
            }
            else if(s[i]==')')
            {
                while(st.top()!='(')
                {
                    result.push_back(st.top());
                    st.pop();
                }
                st.pop();
            }
            else
            {
                while(!st.empty() && prec(s[i])<=prec(st.top()))
                {
                    result.push_back(st.top());
                    st.pop();
                }
                st.push(s[i]);
            }
            
        }
        while(!st.empty())
        {
            result.push_back(st.top());
            st.pop();
        }
    
    return result;
}
